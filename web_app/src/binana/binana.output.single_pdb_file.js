'use strict';var binana={};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,
__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,
filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{OpenFile}from"./binana._utils.shim.js";import*as __module_binana__utils__ from"./binana._utils.js";__nest__(binana,"_utils",__module_binana__utils__);import*as __module_binana__ from"./binana.js";__nest__(binana,"",__module_binana__);
var __name__="binana.output.single_pdb_file";export var textwrap=binana._utils.shim;export var _openFile=OpenFile;export var write=function(parameters,ligand,receptor,closest,close,hydrophobics,hydrogen_bonds,salt_bridges,pi_pi,pi_cat,flexibility,log_output,as_str){if(typeof log_output=="undefined"||log_output!=null&&log_output.hasOwnProperty("__kwargtrans__"))var log_output="";if(typeof as_str=="undefined"||as_str!=null&&as_str.hasOwnProperty("__kwargtrans__"))var as_str=false;var explain='The residue named "CCN" illustrates close contacts where the protein and ligand atoms come within '+
str(parameters.params["close_contacts_dist1_cutoff"])+' of each other. "CON" illustrates close contacts where the protein and ligand atoms come within '+str(parameters.params["close_contacts_dist2_cutoff"])+' of each other. "ALP", "BET", and "OTH" illustrates receptor contacts whose respective protein residues have the alpha-helix, beta-sheet, or "other" secondary structure. "BAC" and "SID" illustrate receptor contacts that are part of the protein backbone and sidechain, respectively. "HYD" illustrates hydrophobic contacts between the protein and ligand. "HBN" illustrates hydrogen bonds. "SAL" illustrates salt bridges. "PIS" illustrates pi-pi stacking interactions, "PIT" illustrates T-stacking interactions, and "PIC" illustrates cation-pi interactions. Protein residue names are unchanged, but the ligand residue is now named "LIG".';
var log_output=log_output+"REMARK\n";var lines=textwrap.wrap(explain,71);for(var line of lines)var log_output=log_output+"REMARK "+line+"\n";var log_output=log_output+"REMARK\n";var log_output=log_output+receptor.save_pdb_string()+"TER\n"+ligand.save_pdb_string()+"TER\n"+closest["mol"].save_pdb_string()+"TER\n";var log_output=log_output+close["mol"].save_pdb_string()+"TER\n"+flexibility["mols"]["alpha_helix"].save_pdb_string()+"TER\n"+flexibility["mols"]["beta_sheet"].save_pdb_string()+"TER\n";var log_output=
log_output+flexibility["mols"]["other_2nd_structure"].save_pdb_string()+"TER\n"+flexibility["mols"]["back_bone"].save_pdb_string()+"TER\n"+flexibility["mols"]["side_chain"].save_pdb_string()+"TER\n";var log_output=log_output+hydrophobics["mol"].save_pdb_string()+"TER\n"+hydrogen_bonds["mol"].save_pdb_string()+"TER\n"+pi_pi["mols"]["pi_stacking"].save_pdb_string()+"TER\n"+pi_pi["mols"]["T_stacking"].save_pdb_string()+"TER\n";var log_output=log_output+pi_cat["mol"].save_pdb_string()+"TER\n"+salt_bridges["mol"].save_pdb_string()+
"TER\n";if(as_str)return log_output;var f=_openFile(parameters.params["output_file"],"w");f.write(log_output);f.close();return""};

//# sourceMappingURL=binana.output.single_pdb_file.map